module(load="imjournal" PersistStateInterval="100" StateFile="/var/spool/rsyslog/imjournal.state")
module(load="imfile" mode="inotify")
module(load="omrelp")

#TODO: work around permission issue when journal has different UID
#$PrivDropToUser syslog
#$PrivDropToGroup syslog

$localHostname {{ getv "/self/host/name" }}

$SystemLogRateLimitInterval 0
$MaxMessageSize 32k
$WorkDirectory /var/spool/rsyslog

# Log lines templates
template(name="CEETemplate" type="string" string="<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag% @cee: %$!all-json-plain%")

# timestamp templates
template(name="timestampRFC3339" type="string" string="%timestamp:::date-rfc3339%")

# StatsD protocol templates
template(name="StatsDkernelOOM" type="string" string="syslog.kernel.%HOSTNAME%.oom:1|c\n")
template(name="StatsDkernelKill" type="string" string="syslog.kernel.%HOSTNAME%.kill:1|c\n")
template(name="StatsDkernelOops" type="string" string="syslog.kernel.%HOSTNAME%.oops:1|c\n")
template(name="StatsDkernelSegfault" type="string" string="syslog.kernel.%HOSTNAME%.segfault:1|c\n")
template(name="StatsDjournaldRateLimit" type="string" string="syslog.journald.%HOSTNAME%.rate-limit:1|c\n")

input(type="imfile" File="/hostfs/var/log/dpkg.log" Tag="dpkg:" PersistStateInterval="100" Ruleset="jsonize" freshStartTail="on")
input(type="imfile" File="/hostfs/var/log/apt/history.log" Tag="apt:" PersistStateInterval="100" Ruleset="jsonize" freshStartTail="on")

ruleset(
  name="jsonize"
  queue.type="LinkedList"
) {
  set $!MESSAGE = $msg;
  set $!hostname = $hostname;
  set $!inputname = $inputname;
  set $!pri = $pri;
  set $!programname = $programname;
  set $!rawmsg = $rawmsg;
  set $!syslogfacility = $syslogfacility;
  set $!syslogseverity = $syslogseverity;
  set $!syslogtag = $syslogtag;
  set $!timegenerated = exec_template("timestampRFC3339");

  call forward
}

ruleset(
  name="forward"
  queue.type="LinkedList"
) {
{{- if ne "" (getenv "DEBUG") }}
  action(type="omfile"
         file="/tmp/debug.log"
         template="RSYSLOG_DebugFormat"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )
{{- end }}

  action(type="omrelp"
         name="fwd_to_logserver"
         target="10.42.24.10"
         port="2514"
         template="CEETemplate"
         queue.type="LinkedList"
         queue.filename="fwd_queue"
         action.resumeretrycount="-1"
         queue.dequeuebatchsize="100"
         queue.saveonshutdown="on"
         queue.discardseverity="8"
         queue.timeoutenqueue="0"
         queue.maxdiskspace="1g"
         queue.highwatermark="8000"
         queue.lowwatermark="2000"
         queue.size="10000"
         queue.discardmark="9750"
         tls="off"
  )

  if ($!SYSLOG_IDENTIFIER == "kernel") then {
    if ($!MESSAGE contains "Out of memory") then {
      action(type="omfwd"
             name="fwd_imudp_stats"
             target="10.42.24.101"
             protocol="udp"
             port="8125"
             template="StatsDkernelOOM"
      )
    } else if ($!MESSAGE contains "Killed process") then {
      action(type="omfwd"
             name="fwd_imudp_stats"
             target="10.42.24.101"
             protocol="udp"
             port="8125"
             template="StatsDkernelKill"
      )
    } else if ($!MESSAGE contains "Call Trace") then {
      action(type="omfwd"
             name="fwd_imudp_stats"
             target="10.42.24.101"
             protocol="udp"
             port="8125"
             template="StatsDkernelOops"
      )
    } else if ($!MESSAGE contains "segfault") then {
      action(type="omfwd"
             name="fwd_imudp_stats"
             target="10.42.24.101"
             protocol="udp"
             port="8125"
             template="StatsDkernelSegfault"
      )
    }
  }

  if ($!SYSLOG_IDENTIFIER == "systemd-journald") then {
    if ($!MESSAGE contains "Suppressed") then {
      action(type="omfwd"
             name="fwd_imudp_stats"
             target="10.42.24.101"
             protocol="udp"
             port="8125"
             template="StatsDjournaldRateLimit"
      )
    }
  }
}

call forward

